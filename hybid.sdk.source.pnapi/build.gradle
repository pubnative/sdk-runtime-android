plugins {
    id 'com.android.privacy-sandbox-sdk'
}

android {
    compileSdkPreview 'TiramisuPrivacySandbox'
    minSdkPreview 'TiramisuPrivacySandbox'
    namespace = "com.example.example-sdk"

    bundle {
        packageName = "com.example.privacysandbox.provider"
        sdkProviderClassName = "com.example.sdk_implementation.SdkProviderImpl"
        setVersion(1, 0, 0)
    }


//    defaultConfig {
//        minSdkVersion 19
//        targetSdkVersion 32
//
//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        consumerProguardFiles "consumer-rules.pro"
//    }
//
//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            buildConfigField "String", "BASE_URL", "\"https://api.pubnative.net/\""
//        }
//        debug {
//            buildConfigField "String", "BASE_URL", "\"https://api.pubnative.net/\""
//        }
//    }
//
//    compileOptions {
//        sourceCompatibility = JavaVersion.VERSION_1_8
//        targetCompatibility = JavaVersion.VERSION_1_8
//    }
}

dependencies {
    include fileTree(dir: "libs", include: ["*.jar"])

    include project(':hybid.sdk.reporting')

    include project(':sdk-implementation')
}

////--------------------------------------------------------------------------------------------------
//// PUBLISHING
////--------------------------------------------------------------------------------------------------
//task sourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
//}
//
//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.rootProject.files(android.getBootClasspath().join(File.pathSeparator))
//    options.memberLevel = JavadocMemberLevel.PUBLIC
//    failOnError false
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//
//static def addDependency(dependency, dependenciesNode) { //finish with dependencies
//    if (dependency.group != null && dependency.name != null) {
//        def dependencyNode = dependenciesNode.appendNode('dependency')
//        dependencyNode.appendNode('groupId', dependency.group)
//        dependencyNode.appendNode('artifactId', dependency.name)
//        dependencyNode.appendNode('version', dependency.version)
//
//        if (dependency.excludeRules.size() > 0) {
//            def exclusions = dependencyNode.appendNode('exclusions')
//            dependency.excludeRules.each { ExcludeRule ex ->
//                def exclusion = exclusions.appendNode('exclusion')
//                exclusion.appendNode('groupId', ex.group)
//                if (ex.module == null || ex.module.isEmpty()) {
//                    exclusion.appendNode('artifactId', "*")
//                } else {
//                    exclusion.appendNode('artifactId', ex.module)
//                }
//            }
//        }
//    }
//}
//
//sonarqube {
//    sonarqube {
//        properties {
//            property "sonar.projectName", "HyBidDemo"
//            property "sonar.projectKey", "HyBidDemoSample"
//            property "sonar.host.url", "http://localhost:9000"
//            property "sonar.projectVersion", version
//            property "sonar.language", "java"
//            property "sonar.sources", "src/main/"
//        }
//    }
//}